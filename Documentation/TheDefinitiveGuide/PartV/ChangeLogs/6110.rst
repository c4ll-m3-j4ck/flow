`6.1.10 (2020-10-29) <https://github.com/neos/flow-development-collection/releases/tag/6.1.10>`_
================================================================================================

Overview of merged pull requests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`BUGFIX: Make InstallerScripts compatible to composer version 2.0+ <https://github.com/neos/flow-development-collection/pull/2188>`_
------------------------------------------------------------------------------------------------------------------------------------

Instead of querying the removed method ::getJobType we now check
the class of the job instance like we do in the first lines
of the method.

* Resolves: `#2187 <https://github.com/neos/flow-development-collection/issues/2187>`_
* Packages: ``Flow``

`BUGFIX: Register ObjectManager::shutdown() before ConfigurationManage… <https://github.com/neos/flow-development-collection/pull/2184>`_
-------------------------------------------------------------------------------------------------------------------------------------------

The `ObjectManager::shutdown()` method will trigger the `shutdownObject()` lifecycle method of
all registered objects. If the `ConfigurationManager` is shutdown beforehand, the configuration
may be in an uninitialized state.

This change swaps the order in which `ConfigurationManager::shutdown()` and `…::shutdown()`
are registered in the Flow's `Package.php` to make sure that the `ConfigurationManager` is still
initialized while the `ObjectManager` is being shut down.

* Resolves: `#2183 <https://github.com/neos/flow-development-collection/issues/2183>`_ 
* Packages: ``Flow``

`Revert "BUGFIX: ActionResponse contains negotiated media type as content-type" <https://github.com/neos/flow-development-collection/pull/2171>`_
-------------------------------------------------------------------------------------------------------------------------------------------------

This introduced a serious regression with the way responses are merged. With this a ContentType will ALWAYS be set in the ActionResponse which means the if conditions while merging inside the ActionResponse will always be true so no overwriting of the content type can happen from repsonses generated in a view for example. Eg. Fusion responses that override the content type will not be able to do that.

Reverts: #2005 

* Packages: ``Flow``

`BUGFIX: Disallow advising of private methods <https://github.com/neos/flow-development-collection/pull/2131>`_
---------------------------------------------------------------------------------------------------------------

Intercepting private methods does not work since the original method
is no longer accessible if it is overridden in the proxy class.

But it was still possible to construct this scenario that would then
fail without exception.

With this change an exception is thrown whenever a private method
is target of a AOP designator.

* Fixes: `#1982 <https://github.com/neos/flow-development-collection/issues/1982>`_
* Packages: ``Flow``

`FEATURE: Add localization for BytesViewHelper <https://github.com/neos/flow-development-collection/pull/2164>`_
----------------------------------------------------------------------------------------------------------------

The `BytesViewHelper` can be localized like the `NumberViewHelper`.

solves #601 

* Packages: ``FluidAdaptor``

`BUGFIX: Handle array options in SelectViewHelper <https://github.com/neos/flow-development-collection/pull/2165>`_
-------------------------------------------------------------------------------------------------------------------

fixes #1245 

* Packages: ``Flow`` ``FluidAdaptor``

`BUGFIX: Allow URI-building from CLI context <https://github.com/neos/flow-development-collection/pull/2158>`_
--------------------------------------------------------------------------------------------------------------

This adds a parameter `$fallbackRequest` to `BaseUriProvider::getConfiguredBaseUriOrFallbackToCurrentRequest()`
that allows it to work in contextx where the active HTTP request
can't get hold of (i.g. in CLI mode).

This also adjusts `UriBuilder::build()` to make use of that new parameter
such that the following code works again from CLI:

```php
$httpRequest = ServerRequest::fromGlobals();
$actionRequest = ActionRequest::fromHttpRequest($httpRequest);
$uriBuilder = new UriBuilder();
$uriBuilder->setRequest($actionRequest);
$uriBuilder->uriFor(...);
```

Previously this would throw an HTTP exception
```
No base URI could be provided. This probably means a call was made outside of an HTTP
request and a base URI was neither configured nor set during runtime.
```
when executed in CLI context.

* Fixes: `#2084 <https://github.com/neos/flow-development-collection/issues/2084>`_
* Packages: ``Flow``

`Detailed log <https://github.com/neos/flow-development-collection/compare/6.1.9...6.1.10>`_
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
